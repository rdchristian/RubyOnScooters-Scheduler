.page-header
  %h1='Administrator Page'
.page-body
  - unless flash.blank?
    - flash.each do |type, message|
      %div{:class => "alert #{bootstrap_class_for(type)} fade in"}
        %button.close{"data-dismiss" => "alert"} Ã—
        = message
  - if @users.any?{ |u| !u.is_activated? }
    %h3='Inactivated Users:'
    %table.table.table-striped
      %thead
        %tr
          %th= 'Name'
          %th= 'Email'
          %th= 'Phone'
          %th= 'Home Group'
          %th= 'Created at'
          %th=t '.actions', :default => t("helpers.actions")
      %tbody
        - @users.each do |user|
          -if !user.is_activated?
            %tr
              %td= link_to user.name, user_path(user)
              %td= user.email
              %td= user.phone
              %td= user.home_group
              %td=l user.created_at
              %td
                = link_to "Activate", "#activateUserModal", :class => 'btn btn-default btn-xs', "data-toggle" => "modal"
                /  "activate"
                / Modal
                #activateUserModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "activateUser", :role => "dialog", :tabindex => "-1"}
                  .modal-dialog
                    .modal-content
                      .modal-header
                        %h4#myModalLabel.modal-title How to notify user:
                      .modal-body
                        = link_to "Via email", activate_user_email_path(user), :class => 'btn btn-default btn-xs'
                        = link_to "Via text", activate_user_text_path(user), :class => 'btn btn-default btn-xs'
                        = link_to "Via text and email", activate_user_text_and_email_path(user), :class => 'btn btn-default btn-xs'
                        = link_to "No notification", activate_user_path(user), :class => 'btn btn-default btn-xs'
                        
                = link_to "Deny", "#denyMessageUserModal", :class => "btn btn-danger btn-xs", "data-toggle" => "modal"
                /  "Deny"
                / Modal
                #denyMessageUserModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "denyMessageUser", :role => "dialog"}
                  .modal-dialog
                    .modal-content
                      .modal-header
                        %h4#myModalLabel.modal-title Explanation:
                      .modal-body
                        = form_tag deny_user_path(user) do
                          .form-group
                            = text_area_tag :message, nil, :class => 'form-control', :size => '60x10'
                          = submit_tag "Send email to denied user", class: 'btn btn-primary', name: "submit", value: "Send Email"
                          = submit_tag "Send text to denied user", class: 'btn btn-primary', name: "submit", value: "Send Text"
                          = submit_tag "Send text and email to denied user", class: 'btn btn-primary', name: "submit", value: "Send Both"
                          = submit_tag "Don't send notification", class: 'btn btn-primary', name: "submit", value: "No Notification"
  - if @events.any?{ |e| !e.is_approved? }
    %h3='Events Needing Approval:'
    %table.table.table-striped
      %thead
        %tr
          %th= 'Title'
          %th= 'Description'
          %th= 'Start'
          %th= 'Ending'
          %th= 'Creator Name'
          %th= 'Facilities'
          %th= 'Resources'
          %th= 'Attendees'
          %th= 'Created at'
          %th=t '.actions', :default => t("helpers.actions")
      %tbody
        - @events.each do |event|
          -if !event.is_approved?
            %tr
              %td= link_to event.title, user_event_path(event.creator, event)
              %td= event.description
              %td= event.start
              %td= event.ending
              %td= link_to event.creator_name, user_path(User.find_by(name: event.creator_name))
              %td= event.facilities_list
              %td= event.resources_list
              %td= event.attendees
              %td=l event.created_at
              %td
                = link_to "Approve", "#approveEventModal", :class => 'btn btn-default btn-xs', "data-toggle" => "modal"
                /  "approve"
                / Modal
                #approveEventModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "approveEvent", :role => "dialog", :tabindex => "-1"}
                  .modal-dialog
                    .modal-content
                      .modal-header
                        %h4#myModalLabel.modal-title How to notify user:
                      .modal-body
                        = link_to "Via email", approve_event_email_path(event), :class => 'btn btn-default btn-xs'
                        = link_to "Via text", approve_event_text_path(event), :class => 'btn btn-default btn-xs'
                        = link_to "Via text and email", approve_event_text_and_email_path(event), :class => 'btn btn-default btn-xs'
                        = link_to "No notification", approve_event_path(event), :class => 'btn btn-default btn-xs'

                = link_to "Deny", "#denyMessageModal", :class => "btn btn-danger btn-xs", "data-toggle" => "modal"
                /  "Deny"
                / Modal
                #denyMessageModal.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "denyMessage", :role => "dialog"}
                  .modal-dialog
                    .modal-content
                      .modal-header
                        %h4#myModalLabel.modal-title Message for event creator:
                      .modal-body
                        = form_tag deny_event_path(event) do
                          .form-group
                            = text_area_tag :message, nil, :class => 'form-control', :size => '60x10'
                          = submit_tag "Send email to event creator", class: 'btn btn-primary', name: "submit", value: "Send Email"
                          = submit_tag "Send text event creator", class: 'btn btn-primary', name: "submit", value: "Send Text"
                          = submit_tag "Send text and email to event creator", class: 'btn btn-primary', name: "submit", value: "Send Both"
                          = submit_tag "Don't send notification", class: 'btn btn-primary', name: "submit", value: "No Notification"
                
  - if @events.any?{ |e| !e.resources_checked_in? && e.ending < Time.zone.now }
    %h3='Events Not Checked In:'
    %table.table.table-striped
      %thead
        %tr
          %th= 'Title'
          %th= 'Description'
          %th= 'Start'
          %th= 'Ending'
          %th= 'Creator Name'
          %th= 'Resources'
          %th=t '.actions', :default => t("helpers.actions")
      %tbody
        - @events.each do |event|
          -if !event.resources_checked_in? && event.ending < Time.zone.now
            %tr
              %td= link_to event.title, user_event_path(event.creator, event)
              %td= event.description
              %td= event.start
              %td= event.ending
              %td= link_to event.creator_name, user_path(User.find_by(name: event.creator_name))
              %td= event.facilities_list
              %td
                = link_to "Send Email Reminder", alert_path(event), :class => 'btn btn-default btn-xs'
                = link_to "Send Text Reminder", check_in_text_path(event), :class => 'btn btn-default btn-xs'
                = link_to "Dismiss", check_in_path(event), :class => 'btn btn-default btn-xs'          
  %h3='User Type Settings:'
  %h5='How many days advance can an event be scheduled?'
  = render :partial => "form"
